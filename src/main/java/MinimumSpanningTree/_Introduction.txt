最小生成树（Minimum Spanning Tree）

- 背景：在 Graph/ShortestPath 中，我们说过"很多图的问题实际上是树的问题，或者说可以转化为树的问题来解决"。最小生成树的问题就是这样的。

- 定义：
  - 生成树：一副无向图的生成树是具有该图的全部顶点，同时边数最少的连通子图。
  - 最小生成树：在一副带权图的生成树中，总权值最小的生成树称为最小生成树。更通俗的解释：如果一幅图有 n 个顶点，则至少需要 n-1
    条边才能把所有节点都连接起来，形成一棵生成树。而在一幅图中，这样的生成树可能有多个，但是他们的权值之和不同，其中权值之和最
    小的即是最小生成树。

- 条件：
  一幅图必须要满足 1.带权 2.无向 3.连通 这三个条件才能找到其最小生成树。
    - 如果图不带权，则有生成树，但无最小生成树。
    - 如果图有向，则没有最小生成树（最小生成树是针对无向图而言的，有向图上的这类问题叫做最小树形图）。
    - 如果图不连通（即存在多个连通分量），则可以对每个分量求出最小生成树，最后得到的是该图的最小生成森林。

- 应用：
  最小生成树中的"权之和"可以看做是对成本之和的抽象。例如：
    - 电缆布线（cabling）：如何用最小成本将发电站的电传输至电网中的每一个节点
    - 网络设计
    - 电路设计

- 如何找到一幅图的最小生成树：
  - 3种算法（前2种是主流的）：
    - Prim 算法：复杂度为 O(ElogV)，使用 IndexMinHeap 作为辅助数据结构
    - Kruskal 算法：复杂度为 O(ElogE)，使用 UnionFind 作为辅助数据结构
    - Vyssotsky 算法
  - 这3种算法都应用了 Cut Property（切分定理）

- 切分定理（Cut Property）：
  - 切分（Cut）：把图中的顶点分为两部分的过程就是一个切分。
  - 横切边（Crossing Edge）：一个边上的两个顶点分别属于一个切分的两部分中，则该边叫做横切边。
    图形化解释 SEE: https://coding.imooc.com/lesson/71.html#mid=1488（4'00''）。
  - 切分定理（Cut Property）：给定一幅图的任意切分，其横切边中权值最小的边必然在该图的最小生成树中。
    证明：将一副有 n 个顶点的图切成分别具有1个顶点和 n-1 个顶点的两部分。此时图中的横切边即是第一部分中那一个顶点的所有邻边，
         而其中权值最小的边一定在最小生成树上（比如上面👆链接中的图中的5号顶点）。

- 最小生成树的不唯一性：
  - 在 Prim 或 Kruskal 算法寻找最小横切边的过程中，如果存在两个最小横切边，则该图存在多个最小生成树（权值一样，但形态不同）。
  - 而 Prim 和 Kruskal 算法都只能找到图中的一个最小生成树。
  - 衍生问题：对于给定的图，求有多少棵最小生成树？

- Vyssotsky 算法：
  - 实际上寻找最小生成树还有一种经典思路，即 Vyssotsky 算法：将边按照任意顺序添加到最小生成树中，在添加过程中，一旦
    形成环，则从这些边中删除权值最大的边。
  - 这个算法还没有很好的数据结构能支撑（尤其是删除边的操作），因此还不是主流算法。
