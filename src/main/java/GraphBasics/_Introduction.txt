Graph Theory 中的一些术语

- Vertex（顶点）
- Edge（边）

- Undirected graph（无向图）
- Directed graph（有向图）

- Unweighted graph（无权图）
- Weighted graph（有权图）
注：所谓"权"即 edge 上是否有数值（e.g. 两个电影的相似度、两地之间的距离）。

- 图的连通性：并不是所有的顶点都会被连在一起，可能有小群体

- Self-loop（自环边，即自己指向自己的边）
- Parallel-edges（平行边，即两顶点之间的多条边）
注：本课程中大多数情况下只考虑 Simple graph （简单图，即不考虑自环边和平行边的图）的情况。

- 图的表示：
  - 同样一副 graph 可以用两种方式表示：邻接矩阵、邻接表；
         0 --- 1
             / |
           /   |
         3 --- 2

  - Adjacency Matrix（邻接矩阵）：用矩阵表示图，graph[i][j] 表示顶点 i 与顶点 j 是否相连：
       有向图：                                    无向图：
                                  0  1  2  3              0  1  2  3
                                +-----------            +-----------
           - 节点0 -> 节点1:   0 | 0  1  0  0          0 | 0  1  0  0
           - 节点1 -> 节点2:   1 | 0  0  1  0          1 | 1  0  1  1
           - 节点2 -> 节点3:   2 | 0  0  0  1          2 | 0  1  0  1
           - 节点3 -> 节点1:   3 | 0  1  0  0          3 | 0  1  1  0

  - Adjacency List（邻接表）：每一行只含有与某一顶点相连接的顶点，graph[i][j] 表示顶点 i 与顶点 j 之间有边连接：
      有向图：                                     无向图：
           - 节点0 -> 节点1:   0 | 1                   0 | 1
           - 节点1 -> 节点2:   1 | 2                   1 | 0  2  3
           - 节点2 -> 节点3:   2 | 3                   2 | 1  3
           - 节点3 -> 节点1:   3 | 1                   3 | 1  2

  - 选取原则：
    - 邻接矩阵更适合表示 dense graph（稠密图）
    - 邻接表适更合表示 sparse graph（稀疏图）

- 无权图的应用：Photoshop 中的魔棒、扫雷、迷宫生成、二分图、欧拉路径、地图填色等
  - SEE: https://coding.imooc.com/lesson/71.html#mid=1486

- 图的遍历：
  - 树也是图的一种特例。
  - 无论是树结构还是图结构，对于节点的遍历，无论是 BFS 还是 DFS，时间复杂度都是 O(V+E) 级别的（V 是顶点个数；E是边数）。
    这背后的直观理解也很简单，在遍历过程中，每个节点访问一次，每条边访问一次。
  - 对于树，O(V+E) = O(V)。这是因为一个含有 V 个节点的树，有 V-1 条边，所以 O(V+E) = O(2*V-1) = O(V)。
  - 对于图，就是 O(V+E)。但只有在稠密图中，E 才会和 V 产生显著的复杂度差别。大多数情况下我们处理的图都是稀疏图，此时 V 和 E 
    可以近似的看做在一个复杂度里。通常在不是特别严谨的场合中也可以说稀疏图的遍历也是 O(V) 级别的，因为每个节点肯定要访问一次。